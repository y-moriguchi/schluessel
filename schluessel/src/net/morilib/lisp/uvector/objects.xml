<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
<comment>Subr Props</comment>
<entry key="s8vector">LispS8Vector$S8Vector</entry>
<entry key="s8vector?">LispS8Vector$IsS8Vector</entry>
<entry key="make-s8vector">LispS8Vector$MakeS8Vector</entry>
<entry key="s8vector-length">HomogeneousArray$VectorLength</entry>
<entry key="s8vector-ref">HomogeneousArray$VectorRef</entry>
<entry key="s8vector-set!">HomogeneousArray$VectorSetS</entry>
<entry key="s8vector-&gt;list">LispS8Vector$S8VectorToList</entry>
<entry key="list-&gt;s8vector">LispS8Vector$ListToS8Vector</entry>
<entry key="s16vector">LispS16Vector$S16Vector</entry>
<entry key="s16vector?">LispS16Vector$IsS16Vector</entry>
<entry key="make-s16vector">LispS16Vector$MakeS16Vector</entry>
<entry key="s16vector-length">HomogeneousArray$VectorLength</entry>
<entry key="s16vector-ref">HomogeneousArray$VectorRef</entry>
<entry key="s16vector-set!">HomogeneousArray$VectorSetS</entry>
<entry key="s16vector-&gt;list">LispS16Vector$S16VectorToList</entry>
<entry key="list-&gt;s16vector">LispS16Vector$ListToS16Vector</entry>
<entry key="s32vector">LispS32Vector$S32Vector</entry>
<entry key="s32vector?">LispS32Vector$IsS32Vector</entry>
<entry key="make-s32vector">LispS32Vector$MakeS32Vector</entry>
<entry key="s32vector-length">HomogeneousArray$VectorLength</entry>
<entry key="s32vector-ref">HomogeneousArray$VectorRef</entry>
<entry key="s32vector-set!">HomogeneousArray$VectorSetS</entry>
<entry key="s32vector-&gt;list">LispS32Vector$S32VectorToList</entry>
<entry key="list-&gt;s32vector">LispS32Vector$ListToS32Vector</entry>
<entry key="s64vector">LispS64Vector$S64Vector</entry>
<entry key="s64vector?">LispS64Vector$IsS64Vector</entry>
<entry key="make-s64vector">LispS64Vector$MakeS64Vector</entry>
<entry key="s64vector-length">HomogeneousArray$VectorLength</entry>
<entry key="s64vector-ref">HomogeneousArray$VectorRef</entry>
<entry key="s64vector-set!">HomogeneousArray$VectorSetS</entry>
<entry key="s64vector-&gt;list">LispS64Vector$S64VectorToList</entry>
<entry key="list-&gt;s64vector">LispS64Vector$ListToS64Vector</entry>

<entry key="u8vector">LispU8Vector$U8Vector</entry>
<entry key="u8vector?">LispU8Vector$IsU8Vector</entry>
<entry key="make-u8vector">LispU8Vector$MakeU8Vector</entry>
<entry key="u8vector-length">HomogeneousArray$VectorLength</entry>
<entry key="u8vector-ref">HomogeneousArray$VectorRef</entry>
<entry key="u8vector-set!">HomogeneousArray$VectorSetS</entry>
<entry key="u8vector-&gt;list">LispU8Vector$U8VectorToList</entry>
<entry key="list-&gt;u8vector">LispU8Vector$ListToU8Vector</entry>
<entry key="u8vector=?">LispU8Vector$EqualU8Vector</entry>
<entry key="u8vector-compare">LispU8Vector$VectorCompare</entry>
<entry key="u8vector-copy!">LispU8Vector$U8VectorCopyS</entry>
<entry key="u8vector-copy">LispU8Vector$U8VectorCopy</entry>
<entry key="u16vector">LispU16Vector$U16Vector</entry>
<entry key="u16vector?">LispU16Vector$IsU16Vector</entry>
<entry key="make-u16vector">LispU16Vector$MakeU16Vector</entry>
<entry key="u16vector-length">HomogeneousArray$VectorLength</entry>
<entry key="u16vector-ref">HomogeneousArray$VectorRef</entry>
<entry key="u16vector-set!">HomogeneousArray$VectorSetS</entry>
<entry key="u16vector-&gt;list">LispU16Vector$U16VectorToList</entry>
<entry key="list-&gt;u16vector">LispU16Vector$ListToU16Vector</entry>
<entry key="u32vector">LispU32Vector$U32Vector</entry>
<entry key="u32vector?">LispU32Vector$IsU32Vector</entry>
<entry key="make-u32vector">LispU32Vector$MakeU32Vector</entry>
<entry key="u32vector-length">HomogeneousArray$VectorLength</entry>
<entry key="u32vector-ref">HomogeneousArray$VectorRef</entry>
<entry key="u32vector-set!">HomogeneousArray$VectorSetS</entry>
<entry key="u32vector-&gt;list">LispU32Vector$U32VectorToList</entry>
<entry key="list-&gt;u32vector">LispU32Vector$ListToU32Vector</entry>
<entry key="u64vector">LispU64Vector$U64Vector</entry>
<entry key="u64vector?">LispU64Vector$IsU64Vector</entry>
<entry key="make-u64vector">LispU64Vector$MakeU64Vector</entry>
<entry key="u64vector-length">HomogeneousArray$VectorLength</entry>
<entry key="u64vector-ref">HomogeneousArray$VectorRef</entry>
<entry key="u64vector-set!">HomogeneousArray$VectorSetS</entry>
<entry key="u64vector-&gt;list">LispU64Vector$U64VectorToList</entry>
<entry key="list-&gt;u64vector">LispU64Vector$ListToU64Vector</entry>

<entry key="f32vector">LispF32Vector$F32Vector</entry>
<entry key="f32vector?">LispF32Vector$IsF32Vector</entry>
<entry key="make-f32vector">LispF32Vector$MakeF32Vector</entry>
<entry key="f32vector-length">HomogeneousArray$VectorLength</entry>
<entry key="f32vector-ref">HomogeneousArray$VectorRef</entry>
<entry key="f32vector-set!">HomogeneousArray$VectorSetS</entry>
<entry key="f32vector-&gt;list">LispF32Vector$F32VectorToList</entry>
<entry key="list-&gt;f32vector">LispF32Vector$ListToF32Vector</entry>
<entry key="f64vector">LispF64Vector$F64Vector</entry>
<entry key="f64vector?">LispF64Vector$IsF64Vector</entry>
<entry key="make-f64vector">LispF64Vector$MakeF64Vector</entry>
<entry key="f64vector-length">HomogeneousArray$VectorLength</entry>
<entry key="f64vector-ref">HomogeneousArray$VectorRef</entry>
<entry key="f64vector-set!">HomogeneousArray$VectorSetS</entry>
<entry key="f64vector-&gt;list">LispF64Vector$F64VectorToList</entry>
<entry key="list-&gt;f64vector">LispF64Vector$ListToF64Vector</entry>
</properties>
